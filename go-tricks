Use pprof for profiling your go code

import _ "net/http/pprof"

and install a handler := http.ListenAndServe(":8080", nil)


You can also find if your porgram has a profiling endpoint by

lsof -Pp $(pidof your-program) | grep less
-P => Dont name ports as services (dump raw numbers)
-p => pid we are interested in

##########

By default, Go does not maintain x86 frame pointers, which means that perf
cannot sample from Go's execution reliably. To build a Go 1.5 or later
toolchain that works with perf, use: 

GOEXPERIMENT=framepointer ./make.bash


##########
Update all packages

go get -u all


###########
Go ssa details for the function `main`

GOSSAFUNC=main go build



###
To benchmark the library use
go test -bench=Encode

then compare benchmarks by benchstat
